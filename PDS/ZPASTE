 /**REXX***************************************************/
 /*   ISPF/PDF EDIT MACRO TO WRITE LINES FROM A ISPF      */
 /*   ISPF TABLE INTO THE CURRENT FILE.                   */
 /*   THIS MACRO IS USED IN CONJUNCTION WITH THE CUT      */
 /*   CUT MACRO                                           */
 /*                                                       */
 /*   SUPPORT                                             */
 /*                                                       */
 /*   FOR HELP ON RUNNING THIS MACRO, UNDER EDIT ENTER:   */
 /*     PASTE HELP                                        */
 /*********************************************************/
  /*trace i */
 address ispexec

 "ISREDIT MACRO (P1 P2 P3 P4) NOPROCESS"
 "CONTROL ERRORS RETURN"
 "VGET (CUTDEF PASTEDEF CUTLIMIT CUTNAME) PROFILE"
 ACTCMD = ''
 CUTTBL = ''
 MsgText = ''
 Use_b4   = 'N'
 Use_excl = ''

   upper P1 P2 P3 P4

   Param.1 = P1      /* table name       */
   Param.2 = P2      /* keep/zero/k/z    */
   Param.3 = P3      /* before/after/b/a */
   Param.4 = P4      /* x/nx             */

 do i = 1 to 4

    if Param.i = '' then leave

    if length(Param.i) = 1 then
    do
       select
         when Param.i = 'A' then Use_b4 = 'N'
         when Param.i = 'B' then Use_b4 = 'Y'
         when Param.i = 'D' then ACTCMD = Param.i
         when Param.i = 'H' then ACTCMD = Param.i
         when Param.i = 'P' then ACTCMD = Param.i
         when Param.i = 'K' then ACTCMD = Param.i
         when Param.i = 'X' then Use_excl = 'Y'
         when Param.i = 'Z' then ACTCMD = Param.i
         otherwise
         do
            ZEDSMSG = 'Unknown parm ' Param.i
            ZEDLMSG = "Don't know what you want! Parm was " Param.i
            "SETMSG MSG(ISRZ001)"
            exit
         end
       end
       iterate
    end

    if length(Param.i) > 2 then
    do
       key_word = substr(Param.i, 1, 3)
       select
         when key_word = 'AFT' then Use_b4 = 'N'
         when key_word = 'BEF' then Use_b4 = 'Y'
         when key_word = 'DEF' then ACTCMD = Param.i
         when key_word = 'HEL' then ACTCMD = Param.i
         when key_word = 'EXC' then Use_excl = 'Y'
         when key_word = 'NOT' then Use_excl = 'N'
         when key_word = 'PRO' then ACTCMD = Param.i
         when key_word = 'KEE' then ACTCMD = Param.i
         when key_word = 'ZER' then ACTCMD = Param.i
         otherwise
         do
            ZEDSMSG = 'Unknown parm ' || Param.i
            ZEDLMSG = "Don't know what you want! Parm was " || Param.i
            "SETMSG MSG(ISRZ001)"
            exit
         end
       end
       iterate
    end

    /* either it's nx or a table name! */

    if Param.i == 'NX' then Use_excl = 'N'
    else do
       if CUTTBL == '' then
          CUTTBL   = substr(Param.i, 1, 2)
       else do
          ZEDSMSG = 'Unknown parm ' || Param.i
          ZEDLMSG = "Don't know what you want! Parm was " || Param.i
          "SETMSG MSG(ISRZ001)"
          exit
       end
    end
 end


 "CONTROL NONDISPL"

 do forever

     "DISPLAY PANEL(PASTEPRM)"
     if RC = 8 then exit(0)

          /* parse the ACTCMD commands */
    if ACTCMD = 'HELP' then
    do
      "CONTROL DISPL"
      "DISPLAY PANEL(CUTHELP)"
      ACTCMD = ''
      ZEDSMSG = 'ZPASTE Help displayed'
      ZEDLMSG = 'Enter ZPASTE command.'
      "SETMSG MSG(ISRZ001)"
      exit
    end

    if substr(ACTCMD,1,1) = 'P' then
    do
      ACTCMD = ''
      iterate
    end

    /* GET DEFAULT MODE */
    if substr(ACTCMD, 1,1) = 'D' then leave

    /* done?            */
    if substr(ACTCMD, 1,1) = 'Z' then leave
    if substr(ACTCMD, 1,1) = 'K' then leave
    if ACTCMD  = '' then leave
 end

 if ACTCMD ¬= 'D' then "CONTROL NONDISPL"

 "DISPLAY PANEL(PASTEDEF)"
 if RC = 8 then exit(0)

 TblName = "CUTPST"||CUTTBL

 msg1 = 'Paste ' || CUTTBL
 msg2 = 'Pasted table ' || CUTTBL
 if Use_b4 == 'Y' then msg1 = msg1 || ' b4 '
                  else msg1 = msg1 || ' after '

 if Use_b4 == 'Y' then msg2 = msg2 || ' before '
                  else msg2 = msg2 || ' after '

 if Use_excl == '' then msg1 = 'Pasted after one line.'
 if Use_excl == 'Y' then msg1 = msg1 || "x'ed."
 if Use_excl == 'N' then msg1 = msg1 || 'nx.'

 if Use_excl == 'Y' then msg2 = msg2 || 'excluded lines.'
 if Use_excl == 'N' then msg2 = msg2 || 'non-excluded lines.'

 if ACTCMD = '' then ACTCMD = PASTEDEF

 /* GET THE NUMBER OF LINES VARIABLE */

 "TBQUERY "TblName" ROWNUM(NumCut)"
 if RC ¬= 0 then
 do
    "TBCREATE "TblName" NAMES(CTPT) NOWRITE SHARE"
    if RC = 0 then
    do
       ZEDSMSG = 'Use CUT before PASTE'
       ZEDLMSG = 'The CUT table was not found - use CUT first'
       "SETMSG MSG(ISRZ001)"
       exit(12)
    end
    else do
      "TBOPEN "TblName" NOWRITE SHARE"
      if RC ¬= 0 then exit(12)
      "TBQUERY "TblName" ROWNUM(NumCut)"
    end
 end

 NumCut = NumCut + 0   /* force type to number */

 if NumCut <= 0 then
 do
    ZEDSMSG = 'Use CUT defore PASTE'
    ZEDLMSG = 'No data has been stored via the CUT macro'
    "SETMSG MSG(ISRZ001)"
    exit(12)
 end

 if Use_excl == '' then
 do
    /* PROCESS LINE COMMANDS, CHECK IF A OR B WAS SPECIFIED */
    "ISREDIT PROCESS DEST"
    if RC >= 16 then
    do
      ZEDSMSG = 'Too many dest lines selected'
      ZEDLMSG = 'Big time error in the zpaste macro!'
      "SETMSG MSG(ISRZ001)"
      exit(12)
    end
    else do
       if RC = 8 then
       do
          MsgText = ' at EOF'
          "ISREDIT (ZDEST) = LINENUM .ZLAST"
       end
       if RC > 8 then
       do
         ZEDSMSG = 'Enter "A"|"B" line cmd'
         ZEDLMSG = 'PASTE requires an "A" or "B" line command'
         "SETMSG MSG(ISRZ001)"
         exit(12)
       end
    end
    "ISREDIT (LINEPTR) = LINENUM .ZDEST"
    LINEPTR = LINEPTR + 0
    x = paste_after()
 end

 if Use_excl == 'Y' then
 do
    "ISREDIT UP MAX"
    if rc > 4 then
    do
      ZEDSMSG = 'Max up failed'
      ZEDLMSG = 'No idea what could have possibly gone wrong.'
      "SETMSG MSG(ISRZ001)"
      exit(12)
    end

    do_last = 0
    do forever
       "ISREDIT LOCATE NEXT EXCLUDED"
       if rc == 4 then leave
       if rc > 0 then
       do
         ZEDSMSG = 'What is excl status?'
         ZEDLMSG = 'No idea what could have possibly gone wrong.'
         "SETMSG MSG(ISRZ001)"
         exit(12)
       end

       if Use_b4 == 'N' then
       do
          "ISREDIT DOWN 1"
          if rc == 2 then
          do
             do_last = 1
             leave
          end
       end

       if ¬do_last then
       do
          "ISREDIT (LINEPTR, LINETO) = DISPLAY_LINES"
          if rc > 0 then
          do
            ZEDSMSG = 'What is excl status?'
            ZEDLMSG = 'No idea what could have possibly gone wrong.'
            "SETMSG MSG(ISRZ001)"
            exit(12)
          end
       end

       LINEPTR = LINEPTR + 0

       "ISREDIT (Xstat) = XSTATUS &LINEPTR"
       if rc > 0 then
       do
         ZEDSMSG = 'What is excl status?'
         ZEDLMSG = 'No idea what could have possibly gone wrong.'
         "SETMSG MSG(ISRZ001)"
         exit(12)
       end

       if Use_b4 == 'N' then if XSTAT = 'NX' then x = paste_before(); else nop;
                        else if XSTAT = 'X'  then x = paste_before(); else nop;

       LINEPTR = LINEPTR + 1
       "ISREDIT (LASTPTR) = LINENUM .ZLAST"
       LASTPTR = LASTPTR + 0
       if LINEPTR > LASTPTR then leave
    end

    if do_last then
    do
       "ISREDIT (LINEPTR) = LINENUM .ZLAST"
       LINEPTR = LINEPTR + 0
       x = paste_after()
    end

 end
 if Use_excl == 'N' then
 do
    "ISREDIT (LinePtr) = LINENUM .ZFIRST"
    LinePtr = LinePtr + 0
    if rc > 0 then
    do
      ZEDSMSG = 'Cursor not on line 1'
      ZEDLMSG = 'No idea what could have possibly gone wrong.'
      "SETMSG MSG(ISRZ001)"
      exit(12)
    end


    do forever
       "ISREDIT (Xstat) = XSTATUS &LINEPTR"
       if rc > 0 then
       do
         ZEDSMSG = 'What is excl status?'
         ZEDLMSG = 'No idea what could have possibly gone wrong.'
         "SETMSG MSG(ISRZ001)"
         exit(12)
       end

       if Xstat = 'NX' then
          if Use_b4 == 'Y' then x = paste_before()
                           else x = paste_after()

       LinePtr = LinePtr + 1
       "ISREDIT (LASTPTR) = LINENUM .ZLAST"
       LASTPTR = LASTPTR + 0
       if LinePtr > LastPtr then leave
    end
 end
 /* If KEEP parameter was not given and no lines were truncated, */
 /* remove all rows from the table.                          */

 if ACTCMD = 'ZERO' then
 do
    LCC=0
    "TBBOTTOM "TblName
    do while (LCC = 0)
       "TBDELETE "TblName
       LCC = RC
    end
 end

 /* Check if truncation occurred, if so display message */
 if Trunc_count > 0 then
 do
     ZEDSMSG = Trunc_count' lines truncated'
     ZEDLMSG = 'Current record length shorter than origin',
               '- 'Trunc_count' OF 'NumCut' records were truncated'
     "SETMSG MSG(ISRZ001)"
 end
 else do
     if Use_excl == '' then
        ZEDSMSG = NumCut' lines pasted'||MsgText
     else
        ZEDSMSG = msg1

     if Use_excl == '' then
        ZEDLMSG = NumCut' lines were pasted into the current file'||MsgText
     else
        ZEDLMSG = msg2
     "SETMSG MSG(ISRZ000)"
 end

 LINE1 = ZDEST + 1
 "ISREDIT CURSOR = &LINE1 0"
 exit


paste_before:
    /* "ISREDIT (ZDEST) = LINENUM .ZCSR"  */
    ZDEST = LINEPTR
    Trunc_count = 0
    /* GET EACH CUT LINE FROM THE TABLE AND ADD IT TO THE FILE */
    i = NumCut
    "TBTOP "TblName
    do i = 1 to NumCut
      "TBSKIP "TblName" NUMBER(+1)"
      "ISREDIT LINE_BEFORE &ZDEST = DATALINE (CTPT)"
      if RC = 4 then Trunc_count = Trunc_count + 1
      ZDEST = ZDEST + 1
    end
    LINEPTR = ZDEST
return 1

paste_after:
    /* "ISREDIT (ZDEST) = LINENUM .ZCSR"  */
    ZDEST = LINEPTR
    Trunc_count = 0
    /* GET EACH CUT LINE FROM THE TABLE AND ADD IT TO THE FILE */
    i = NumCut
    "TBBOTTOM "TblName
    do i = NumCut to 1 by -1
      "ISREDIT LINE_AFTER &ZDEST = DATALINE (CTPT)"
      if RC = 4 then Trunc_count = Trunc_count + 1
      "TBSKIP "TblName" NUMBER(-1)"
    end
    LINEPTR = LINEPTR + NumCut
 return 1
